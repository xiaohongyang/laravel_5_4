<?php

namespace Tests\Feature;

use App\User;
use Illuminate\Http\Testing\File;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class HttpTest extends TestCase
{

    protected $testDir = "testDir";

    protected function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub

        if (file_exists($this->testDir)){
            rmdir($this->testDir);
        }
    }


    /**
     * A basic test example.
     *
     * @return void
     */
    public function testExample()
    {
        //$this->assertTrue(true);
        $response = $this->get(''. env('APP_URL') .'/home');

        $response->assertSee('Login');
    }

    protected function authorization(){

        $user = factory(User::class)->create();

        $response = $this->actingAs($user)
                        ->withSession(['foo' => 'bar'])->get('/home');
        $response->assertSee('Logout');
    }

    public function testLogin(){

        $this->_login();
        $this->_getData();
    }

    public function _login(){

        $response = $this->json('post', 'http://laravel.com/login', ['password' => 'abcabc', 'email' => '2447391779@qq.com']);
        $response->assertStatus(302);
    }

    protected function _getData(){

        $response = $this->get("/home");
        $response->assertSee('Logout');

    }

    public function testGetPageData(){

        $responce = $this->get('/api/articles');
        $rs = $responce->json();
        //$responce->assertJson(['perPage'=>10]);
        if (file_exists($this->testDir)){
            rmdir($this->testDir);
        }
        mkdir("testDIR");
    }

}
